version: '3.7'
services:
  zookeeper-connect-course:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: zookeeper-connect-course
    platform: linux/amd64
    restart: always
    attach: false
    healthcheck:
      test: echo 'ruok' | nc -w 2 localhost 2181 | grep imok
      start_period: 50s
      timeout: 10s
      retries: 5
      interval: 30s
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: -Dzookeeper.4lw.commands.whitelist=ruok
  broker-connect-course:
    image: confluentinc/cp-kafka:7.5.3
    container_name: broker-connect-course
    platform: linux/amd64
    attach: false
    restart: always
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 50s
      interval: 20s
      timeout: 10s
      retries: 10
    depends_on:
      zookeeper-connect-course:
        condition: service_healthy
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-connect-course:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-connect-course:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  schema-registry-connect-course:
    image: confluentinc/cp-schema-registry:7.5.3
    container_name: schema-registry-connect-course
    platform: linux/amd64
    attach: false
    restart: always
    depends_on:
      broker-connect-course:
        condition: service_healthy
    healthcheck:
      test: curl --output /dev/null --silent --head --fail http://schema-registry-connect-course:8082/subjects
      start_period: 2m
      interval: 30s
      timeout: 10s
      retries: 10
    ports:
      - "8082:8082"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-connect-course
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker-connect-course:29092
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry-connect-course:8082
  kafka-connect-course:
    image: confluentinc/cp-kafka-connect:7.5.3
    container_name: kafka-connect-course
    platform: linux/amd64
    attach: false
    restart: always
    depends_on:
      schema-registry-connect-course:
        condition: service_healthy
    ports:
      - 8083:8083
    healthcheck:
      test: curl http://kafka-connect-course:8083/ || exit 1
      start_period: 4m
      interval: 30s
      timeout: 10s
      retries: 1
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "broker-connect-course:29092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect-course
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry-connect-course:8082'
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components,/usr/share/customs'
    volumes:
      - ./jars:/usr/share/customs
    command: > 
      bash -c "
      confluent-hub install --no-prompt jcustenborder/kafka-connect-twitter:0.3.34 && \
      confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.7.4 && \
      confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:14.0.12 && \
      confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:0.6.3 && \
      /etc/confluent/docker/run"
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.5.3
    hostname: control-center
    container_name: control-center
    attach: false
    depends_on:
      kafka-connect-course:
        condition: service_healthy
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker-connect-course:29092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'http://kafka-connect-course:8083'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry-connect-course:8082"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
  postgres:
    image: postgres:9.5-alpine
    environment:
      POSTGRES_USER: postgres     # define credentials
      POSTGRES_PASSWORD: postgres # define credentials
      POSTGRES_DB: postgres       # define database
    ports:
      - 5432:5432
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    container_name: elasticsearch
    platform: linux/amd64
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ports:
      - 9200:9200
      - 9300:9300
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.12.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch